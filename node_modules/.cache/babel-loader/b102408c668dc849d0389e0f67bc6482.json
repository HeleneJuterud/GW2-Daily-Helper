{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = createTheme;\nexports.nonTokenVariables = void 0;\n\nvar _mineralUiTokens = _interopRequireDefault(require(\"mineral-ui-tokens\"));\n\nvar _createColorRamp = _interopRequireDefault(require(\"./createColorRamp\"));\n\nvar _fontSizeBase = _interopRequireDefault(require(\"./fontSizeBase\"));\n\nvar _colorAliases = _interopRequireDefault(require(\"./generated/colorAliases\"));\n\nvar _groupedByRampJsTokens = _interopRequireDefault(require(\"./generated/groupedByRampJsTokens\"));\n\nvar _palette = _interopRequireDefault(require(\"./generated/palette\"));\n\nvar _themeFromTokens = _interopRequireWildcard(require(\"./themeFromTokens\"));\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar primaryColors = Object.keys(_constants.PRIMARY_COLOR);\n\nvar nonTokenVariables = function nonTokenVariables(colors) {\n  return {\n    boxShadow_focusInner: colors && colors.white || _palette.default.white,\n    direction: 'ltr',\n    fontSize_base: _fontSizeBase.default\n  };\n};\n\nexports.nonTokenVariables = nonTokenVariables;\n\nvar colorOverrides = function colorOverrides(colors) {\n  return Object.keys(_groupedByRampJsTokens.default).reduce(function (acc, color) {\n    return colors[color] ? _objectSpread({}, acc, (0, _themeFromTokens.themeFromColorTokens)({\n      color: correctColorType(colors[color], color),\n      colorName: color,\n      tokens: _groupedByRampJsTokens.default[color]\n    })) : acc;\n  }, {});\n};\n\nvar correctColorType = function correctColorType(colorValue, color) {\n  var isStringColor = ['black', 'white'].indexOf(color) !== -1;\n  return typeof colorValue === 'string' && isStringColor ? colorValue : getRamp(colorValue, color);\n};\n\nvar getRamp = function getRamp(color, keyName) {\n  if (typeof color === 'string') {\n    if (_palette.default[color]) {\n      return _palette.default[color];\n    } else {\n      throw new Error(\"[mineral-ui/themes/createTheme]: Expected colors.\" + keyName + \" to be a color ramp from the mineral-ui palette or a custom color ramp, but got '\" + color + \"'.\\nSee https://mineral-ui.com/color#guidelines-ramps for the palette ramps.\\nSee https://github.com/mineral-ui/mineral-ui/blob/master/packages/mineral-ui-tokens/src/blue.js for an example color ramp.\");\n    }\n  }\n\n  var ignoreInflection = color.inflection,\n      ramp = _objectWithoutPropertiesLoose(color, [\"inflection\"]);\n\n  return ramp;\n};\n\nvar getWhiteOrBlackTextColor = function getWhiteOrBlackTextColor(color, colors, override) {\n  var black = colors.black || _palette.default.black;\n  var white = colors.white || _palette.default.white;\n  var inflectionPoints = primaryColors.reduce(function (acc, color) {\n    acc[color] = _colorAliases.default[\"backgroundColor_\" + (color === 'theme' ? 'brand' : color) + \"Primary\"].split('_')[1];\n    return acc;\n  }, {});\n  return override && typeof override.inflection === 'number' ? override.inflection > inflectionPoints[color] ? black : white : white;\n};\n\nvar primaryColorsByVariation = function primaryColorsByVariation(colors) {\n  if (colors === void 0) {\n    colors = {};\n  }\n\n  return primaryColors.reduce(function (acc, color) {\n    var override = colors[color];\n    acc[\"color_\" + color + \"Primary\"] = getWhiteOrBlackTextColor(color, colors, override);\n    return acc;\n  }, {});\n};\n\nfunction createTheme(options) {\n  var colors = options && options.colors;\n  var grayRamp = colors && colors.gray ? (0, _createColorRamp.default)(getRamp(colors.gray, 'gray'), 'color_gray_') : (0, _createColorRamp.default)(_palette.default.gray, 'color_gray_');\n  var themeRamp = colors && colors.theme ? (0, _createColorRamp.default)(getRamp(colors.theme, 'theme'), 'color_theme_') : (0, _createColorRamp.default)(_palette.default.brand, 'color_theme_');\n  return _objectSpread({}, (0, _themeFromTokens.default)(_mineralUiTokens.default), nonTokenVariables(colors), colors ? colorOverrides(colors) : undefined, colors ? primaryColorsByVariation(colors) : undefined, grayRamp, themeRamp, {\n    color_black: colors && colors.black || _palette.default.black,\n    color_white: colors && colors.white || _palette.default.white\n  }, options && options.overrides);\n}","map":null,"metadata":{},"sourceType":"script"}