{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = CardTitle;\n\nvar _core = require(\"@emotion/core\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _IconDanger = _interopRequireDefault(require(\"../Icon/IconDanger\"));\n\nvar _IconSuccess = _interopRequireDefault(require(\"../Icon/IconSuccess\"));\n\nvar _IconWarning = _interopRequireDefault(require(\"../Icon/IconWarning\"));\n\nvar _styled = require(\"./styled\");\n\nvar _propTypes = require(\"./propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar variantIcons = {\n  danger: (0, _core.jsx)(_IconDanger.default, {\n    size: \"medium\"\n  }),\n  success: (0, _core.jsx)(_IconSuccess.default, {\n    size: \"medium\"\n  }),\n  warning: (0, _core.jsx)(_IconWarning.default, {\n    size: \"medium\"\n  })\n};\n\nfunction CardTitle(props) {\n  var actions = props.actions,\n      avatar = props.avatar,\n      children = props.children,\n      secondaryText = props.secondaryText,\n      subtitle = props.subtitle,\n      variant = props.variant,\n      restProps = _objectWithoutPropertiesLoose(props, [\"actions\", \"avatar\", \"children\", \"secondaryText\", \"subtitle\", \"variant\"]);\n\n  var rootProps = _objectSpread({}, restProps);\n\n  var secondaryComponent = actions ? _react.Children.map(actions, function (action, index) {\n    return (0, _react.cloneElement)(action, {\n      key: index\n    });\n  }) : secondaryText ? (0, _core.jsx)(_styled.CardTitleSecondaryText, null, secondaryText) : null;\n  return (0, _core.jsx)(_styled.CardTitleRoot, rootProps, avatar && (0, _core.jsx)(_styled.CardTitleAvatar, {\n    subtitle: subtitle\n  }, avatar), (0, _core.jsx)(_styled.CardTitleInner, null, (0, _core.jsx)(_styled.CardTitleTitle, {\n    variant: variant\n  }, variant && variantIcons[variant], (0, _core.jsx)(_styled.CardTitleTitleContent, {\n    actions: actions\n  }, children), secondaryComponent), subtitle && (0, _core.jsx)(_styled.CardTitleSubtitle, {\n    avatar: avatar\n  }, subtitle)));\n}\n\nCardTitle.displayName = 'CardTitle';\nCardTitle.propTypes = process.env.NODE_ENV !== \"production\" ? _propTypes.cardTitlePropTypes : {};","map":null,"metadata":{},"sourceType":"script"}