{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactPopper = require(\"react-popper\");\n\nvar _reactDom = require(\"react-dom\");\n\nvar _utils = require(\"../utils\");\n\nvar _ModifiersContext = _interopRequireDefault(require(\"../Dialog/ModifiersContext\"));\n\nvar _EventListener = _interopRequireDefault(require(\"../EventListener\"));\n\nvar _Portal = _interopRequireDefault(require(\"../Portal\"));\n\nvar _PopoverTrigger = _interopRequireDefault(require(\"./PopoverTrigger\"));\n\nvar _PopoverContent = _interopRequireDefault(require(\"./PopoverContent\"));\n\nvar _styled = require(\"./styled\");\n\nvar _constants = require(\"./constants\");\n\nvar _propTypes = require(\"./propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Popover =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Popover, _Component);\n\n  function Popover() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: Boolean(_this.props.defaultIsOpen)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", _this.props.id || \"popover-\" + (0, _utils.generateId)());\n\n    _defineProperty(_assertThisInitialized(_this), \"popoverContent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"popoverTrigger\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getStateAndHelpers\", function () {\n      return {\n        state: {\n          isOpen: _this.getControllableValue('isOpen')\n        },\n        helpers: {\n          close: _this.close,\n          focusTrigger: _this.focusTrigger,\n          open: _this.open,\n          toggleOpen: _this.toggleOpen\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTriggerRef\", function (node) {\n      var triggerRef = _this.props.triggerRef;\n      _this.popoverTrigger = node;\n      triggerRef && triggerRef(node);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setContentRef\", function (node) {\n      _this.popoverContent = node;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getContentProps\", function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      var contentId = _this.getContentId();\n\n      var _this$props = _this.props,\n          content = _this$props.content,\n          hasArrow = _this$props.hasArrow,\n          modifiers = _this$props.modifiers,\n          placement = _this$props.placement,\n          positionFixed = _this$props.positionFixed,\n          subtitle = _this$props.subtitle,\n          title = _this$props.title;\n      return _objectSpread({}, props, {\n        hasArrow: hasArrow,\n        id: contentId,\n        modifiers: modifiers,\n        placement: placement,\n        positionFixed: positionFixed,\n        ref: _this.setContentRef,\n        subtitle: subtitle,\n        tabIndex: 0,\n        title: title,\n        onBlur: (0, _utils.composeEventHandlers)(content && content.props && content.props.onBlur, _this.onBlur)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderContent\", function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      var _this$props2 = _this.props,\n          content = _this$props2.content,\n          usePortal = _this$props2.usePortal;\n      var popoverContent;\n\n      if ((0, _utils.isRenderProp)(content)) {\n        popoverContent = content(_objectSpread({}, _this.getStateAndHelpers(), {\n          props: _this.getContentProps(props)\n        }));\n      } else {\n        popoverContent = (0, _core.jsx)(_PopoverContent.default, _this.getContentProps(props), content);\n      }\n\n      if (usePortal) {\n        popoverContent = (0, _core.jsx)(_Portal.default, null, popoverContent);\n      }\n\n      return popoverContent;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getContentId\", function () {\n      return _this.id + \"-content\";\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTriggerProps\", function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      var isOpen = _this.getControllableValue('isOpen');\n\n      var contentId = _this.getContentId();\n\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          cursor = _this$props3.cursor,\n          disabled = _this$props3.disabled;\n      var child, childDisabled;\n\n      if (!(0, _utils.isRenderProp)(children)) {\n        child = children ? _react.Children.only(children) : undefined;\n        childDisabled = child && child.props.disabled !== undefined;\n      }\n\n      return _objectSpread({}, (0, _utils.isRenderProp)(children) ? props : {}, {\n        'aria-describedby': contentId,\n        'aria-disabled': disabled,\n        'aria-expanded': isOpen,\n        'aria-owns': contentId,\n        children: child,\n        cursor: cursor,\n        disabled: child && childDisabled ? childDisabled : disabled,\n        ref: _this.setTriggerRef,\n        role: 'button'\n      }, !(0, _utils.isRenderProp)(children) ? props : {}, {\n        onBlur: (0, _utils.composeEventHandlers)(props.onBlur, _this.onBlur),\n        onClick: !disabled ? (0, _utils.composeEventHandlers)(props.onClick, _this.toggleOpen) : undefined\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTrigger\", function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      var children = _this.props.children;\n\n      if ((0, _utils.isRenderProp)(children)) {\n        return children(_objectSpread({}, _this.getStateAndHelpers(), {\n          props: _this.getTriggerProps(props)\n        }));\n      }\n\n      var child = _react.Children.only(children);\n\n      return (0, _core.jsx)(_PopoverTrigger.default, _this.getTriggerProps(_objectSpread({}, child.props, {\n        children: child\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function (event) {\n      var isOpen = _this.getControllableValue('isOpen');\n\n      if (isOpen && _this.isEventOutsideComponent(event)) {\n        _this.close(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function (event) {\n      if (_this.isControlled('isOpen')) {\n        _this.closeActions(event);\n      } else {\n        _this.setState(function () {\n          return {\n            isOpen: false\n          };\n        }, function () {\n          _this.closeActions(event);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeActions\", function (event) {\n      var _this$props4 = _this.props,\n          focusTriggerOnClose = _this$props4.focusTriggerOnClose,\n          onClose = _this$props4.onClose;\n      onClose && onClose(event);\n\n      var isOpen = _this.getControllableValue('isOpen');\n\n      !isOpen && focusTriggerOnClose && _this.focusTrigger();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusTrigger\", function () {\n      var node = _this.popoverTrigger;\n\n      if (!node) {\n        return;\n      }\n\n      var element = node instanceof HTMLButtonElement || node.getAttribute('role') === 'button' ? node : node.firstChild instanceof HTMLElement ? node.firstChild : null;\n      element && element.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDocumentClick\", function (event) {\n      if (_this.isEventOutsideComponent(event)) {\n        _this.close(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDocumentKeydown\", function (event) {\n      if (event.key.indexOf('Esc') === 0) {\n        event.preventDefault();\n\n        _this.close(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isEventOutsideComponent\", function (event) {\n      /* eslint-disable react/no-find-dom-node */\n      var usePortal = _this.props.usePortal;\n      var node = (0, _reactDom.findDOMNode)(_assertThisInitialized(_this));\n      var popoverContentNode = _this.popoverContent;\n      var target = event.type === 'blur' && event.relatedTarget && popoverContentNode === event.target ? event.relatedTarget : event.target;\n\n      if (usePortal) {\n        return node && node instanceof HTMLElement && target && target instanceof HTMLElement && !node.contains(target) && popoverContentNode && !popoverContentNode.contains(target);\n      } else {\n        return node && node instanceof HTMLElement && target && target instanceof HTMLElement && !node.contains(target);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"open\", function (event) {\n      if (_this.isControlled('isOpen')) {\n        _this.openActions(event);\n      } else {\n        _this.setState(function () {\n          return {\n            isOpen: true\n          };\n        }, function () {\n          _this.openActions(event);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openActions\", function (event) {\n      _this.focusTrigger();\n\n      _this.props.onOpen && _this.props.onOpen(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleOpen\", function (event) {\n      var isOpen = _this.getControllableValue('isOpen');\n\n      if (isOpen) {\n        _this.close(event);\n      } else {\n        _this.open(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isControlled\", function (prop) {\n      return _this.props.hasOwnProperty(prop);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getControllableValue\", function (key) {\n      return _this.isControlled(key) ? _this.props[key] : _this.state[key];\n    });\n\n    return _this;\n  }\n\n  var _proto = Popover.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return (0, _core.jsx)(_ModifiersContext.default.Consumer, null, function (contextModifiers) {\n      var _this2$props = _this2.props,\n          ignoreContent = _this2$props.content,\n          ignoreCursor = _this2$props.cursor,\n          ignoreDisabled = _this2$props.disabled,\n          modifiers = _this2$props.modifiers,\n          ignoreOnClose = _this2$props.onClose,\n          ignoreOnOpen = _this2$props.onOpen,\n          ignoreTitle = _this2$props.title,\n          rootProps = _objectWithoutPropertiesLoose(_this2$props, [\"content\", \"cursor\", \"disabled\", \"modifiers\", \"onClose\", \"onOpen\", \"title\"]);\n\n      var isOpen = _this2.getControllableValue('isOpen');\n\n      var contentProps = {\n        modifiers: modifiers || contextModifiers\n      };\n      return (0, _core.jsx)(_reactPopper.Manager, null, (0, _core.jsx)(_styled.PopoverRoot, rootProps, _this2.renderTrigger(), isOpen && _this2.renderContent(contentProps), isOpen && (0, _core.jsx)(_EventListener.default, {\n        listeners: [{\n          target: 'document',\n          event: 'click',\n          handler: _this2.handleDocumentClick,\n          options: true\n        }, {\n          target: 'document',\n          event: 'keydown',\n          handler: _this2.handleDocumentKeydown,\n          options: true\n        }]\n      })));\n    });\n  };\n\n  return Popover;\n}(_react.Component);\n\nexports.default = Popover;\n\n_defineProperty(Popover, \"displayName\", 'Popover');\n\n_defineProperty(Popover, \"defaultProps\", {\n  focusTriggerOnClose: true,\n  hasArrow: true,\n  placement: _constants.PLACEMENT.bottom\n});\n\nPopover.propTypes = process.env.NODE_ENV !== \"production\" ? _propTypes.popoverPropTypes : {};","map":null,"metadata":{},"sourceType":"script"}