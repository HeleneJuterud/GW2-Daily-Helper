{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = mapComponentThemes;\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Generates a new component theme based on the theme of another component.\n *\n * preserveKeys\n *\n *   What does it do:\n *\n *     Ensures source theme variables are used in override styles when the\n *     source does not apply those styles and the override component is\n *     independently themeable\n *\n *     e.g. Necessary in TableHeaderCell (which is a themed TableCell) because\n *     TableCells and TableHeaderCells are both independently themeable\n *\n *   How to use:\n *\n *     Provide array of theme variable keys used in style properties applied by\n *     source component and not by override component\n */\n\n\nfunction mapComponentThemes(source, override, baseTheme, preserveKeys) {\n  var REGEXP_SOURCE_NAME = new RegExp(\"^\" + source.name);\n  var sourceThemeWithRenamedKeys = Object.keys(source.theme).reduce(function (acc, sourceKey) {\n    if (REGEXP_SOURCE_NAME.test(sourceKey)) {\n      var overrideKey = sourceKey.replace(REGEXP_SOURCE_NAME, override.name);\n      acc[overrideKey] = source.theme[sourceKey];\n    }\n\n    return acc;\n  }, {});\n  var preserved = preserveKeys && preserveKeys.reduce(function (acc, sourceKey) {\n    var keyProperty = sourceKey.split('_')[1];\n    acc[override.name + \"_\" + keyProperty] = source.theme[sourceKey];\n    return acc;\n  }, {});\n  return _objectSpread({}, sourceThemeWithRenamedKeys, override.theme, baseTheme, preserved);\n}","map":null,"metadata":{},"sourceType":"script"}